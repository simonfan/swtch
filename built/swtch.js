//     swtch
//     (c) simonfan
//     swtch is licensed under the MIT terms.

define("swtch",["require","exports","module","lodash","subject"],function(t,i,n){{var s=t("lodash"),a=t("subject");n.exports=a({initialize:function(t){this.situations=[],s.each(t,function(t){this.situation(t.condition,t.callback)},this)},parseCondition:function(t){return s.isString(t)||s.isNumber(t)?function(i){return t===i}:s.isRegExp(t)?s.bind(t.test,t):s.isFunction(t)?t:void 0},situation:function(t,i){if(1===arguments.length&&s.isFunction(t))return this.unmatched(arguments[0]);var n={callback:i,test:this.parseCondition(t)};return this.situations.push(n),this},unmatched:function(t){return this.unmatchedCallback=t,this},unmatchedCallback:s.noop,execFirst:function(t){var i=s.find(this.situations,function(i){return i.test.call(this,t)},this),n=i?i.callback:this.unmatchedCallback;return this.execCallback(n,t)},exec:function(t){var i=!1;return s.each(this.situations,function(n){n.test(t)&&(i=!0,this.execCallback(n.callback,t))},this),i||this.execCallback(this.unmatchedCallback,t),this},execCallback:function(t,i){return t.call(this,i)}})}});